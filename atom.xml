<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://aturx.github.io/</id>
    <title>链 求 君</title>
    <updated>2020-03-04T06:27:50.962Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://aturx.github.io/"/>
    <link rel="self" href="https://aturx.github.io/atom.xml"/>
    <subtitle>AturX  的个人网站</subtitle>
    <logo>https://aturx.github.io/images/avatar.png</logo>
    <icon>https://aturx.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 链 求 君</rights>
    <entry>
        <title type="html"><![CDATA[网站流量统计功能添加]]></title>
        <id>https://aturx.github.io/post/wang-zhan-liu-liang-tong-ji-gong-neng-tian-jia</id>
        <link href="https://aturx.github.io/post/wang-zhan-liu-liang-tong-ji-gong-neng-tian-jia">
        </link>
        <updated>2020-03-04T06:26:15.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-站长统计的选择">😁一、站长统计的选择</h1>
<p>想要查看网站的访问量，可以给网站进行网站统计。先对网站统计的工具选择：因为网站是国内访问，选择百度统计比较合适。</p>
<p>访问地址：<a href="https://tongji.baidu.com">百度流量统计</a></p>
<p>还有另一个，网站直接统计的js脚本也可以使用，需要添加到网页中，好处是可以显示用户访问量在页面。</p>
<p>访问地址： <a href="https://busuanzi.ibruce.info/">不蒜子访问量展示</a></p>
<h1 id="二-添加网站统计">😁二、添加网站统计</h1>
<h2 id="百度统计方式">百度统计方式</h2>
<p>基本过程是：</p>
<ol>
<li>
<p>首页注册登录</p>
</li>
<li>
<p>添加自己的网站域名</p>
</li>
<li>
<p>复制生成好的js代码片段</p>
</li>
<li>
<p>将代码添加到自己的网站页面中</p>
</li>
<li>
<p>20分钟后可查看页面的流量统计</p>
</li>
</ol>
<p>web4web.top 统计代码添加 :</p>
<pre><code>&lt;script&gt;
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement(&quot;script&quot;);
  hm.src = &quot;https://hm.baidu.com/hm.js?13ea7e585ad4fa34100390e5a6862c52&quot;;
  var s = document.getElementsByTagName(&quot;script&quot;)[0]; 
  s.parentNode.insertBefore(hm, s);
})();
&lt;/script&gt;

</code></pre>
<p>lisiyi.top 统计代码添加 ：</p>
<pre><code>&lt;script&gt;
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement(&quot;script&quot;);
  hm.src = &quot;https://hm.baidu.com/hm.js?5f536360cba2bd2691929ab1dfc08c55&quot;;
  var s = document.getElementsByTagName(&quot;script&quot;)[0]; 
  s.parentNode.insertBefore(hm, s);
})();
&lt;/script&gt;
</code></pre>
<h2 id="不蒜子方式">不蒜子方式</h2>
<p>参考：<br>
<a href="https://liam.page/2017/04/29/busuanzi-offset-setting/">数值初始化</a></p>
<p>不蒜子 参考代码片段：</p>
<pre><code>  &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;
&lt;span id=&quot;busuanzi_container_site_uv&quot; style='display:none'&gt;
本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人&lt;/span&gt;| 
    Powered by &lt;a href=&quot;https://github.com/aturX&quot; target=&quot;_blank&quot;&gt;AturX&lt;/a&gt; 
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Maven 的基础知识]]></title>
        <id>https://aturx.github.io/post/maven-de-ji-chu-zhi-shi</id>
        <link href="https://aturx.github.io/post/maven-de-ji-chu-zhi-shi">
        </link>
        <updated>2020-03-04T04:54:47.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="maven-基-本-操-作">🐶 Maven 基 本 操 作</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="maven-基-本-操-作">🐶 Maven 基 本 操 作</h1>
<!-- more -->
<h2 id="构建">构建</h2>
<p>要构建一个基于Maven的项目，打开控制台，进入到 pom.xml 文件所放的项目文件夹，并发出以下命令：</p>
<pre><code>mvn package
</code></pre>
<!-- more -->
<h2 id="清除">清除</h2>
<p>在基于Maven的项目中，很多缓存输出在“target”文件夹中。如果想建立项目部署，必须确保清理所有缓存的输出，从面能够随时获得最新的部署。</p>
<pre><code>mvn clean
</code></pre>
<p>要部署您的项目进行生产，它总是建议使用 “mvn clean package“, 以确保始终获得最新的部署。</p>
<!-- more -->
<h2 id="单元测试">单元测试</h2>
<p>要通过Maven运行单元测试，发出此命令：</p>
<pre><code>mvn test
</code></pre>
<p>这会在你的项目中运行整个单元测试。</p>
<!-- more -->
<h2 id="安装">安装</h2>
<p>在Maven中，可以使用“mvn install”打包项目，并自动部署到本地资源库，让其他开发人员使用它。</p>
<pre><code>mvn install
</code></pre>
<p>注意，<br>
当“install”在执行阶段，上述所有阶段 “validate“, “compile“, “test“, “package“, “integration-test“, “verify” 阶段, 包括目前的“install”阶段将被执行有序。</p>
<!-- more -->
<h1 id="maven-的-pom-文-件">🦊 Maven 的 POM 文 件</h1>
<h3 id="maven-项目唯一标识标签">Maven - 项目唯一标识标签：</h3>
<ul>
<li>
<p>groupId：项目或者组织的唯一标志 ，如cn.gov.customs生成的相对路径为：/cn/gov/customs</p>
</li>
<li>
<p>artifactId：项目的通用名称</p>
</li>
<li>
<p>version：项目的版本</p>
</li>
<li>
<p>packaging：打包机制，如pom,jar,maven-plugin,ejb,war,ear,rar,par</p>
</li>
<li>
<p>name：用户描述项目的名称，无关紧要的东西，非必要</p>
</li>
<li>
<p>url：开发团队官方地址 ，非必要</p>
</li>
<li>
<p>classifer：分类</p>
</li>
</ul>
<p><code>groupId,artifactId,version,packaging</code>作为项目唯一标识</p>
<p>例子：</p>
<pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;
   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
   xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0
   http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
   
   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
   // 1. groupId 这是项目组的编号，这在组织或项目中通常是独一无二的。
   // 例如:com.company.bank 某公司银行相关项目

   &lt;groupId&gt;com.baidu.project-group&lt;/groupId&gt;
   
   // 2.项目ID。这通常是项目的名称。例如，springboot-demo。 
   &lt;artifactId&gt;springboot-demo&lt;/artifactId&gt;
   
   // 3. 版本号与groupId 结合使用
   &lt;version&gt;1.0&lt;/version&gt;
   // 4. 打包类型 
   &lt;packaging&gt;jar&lt;/packaging&gt;
   
   &lt;name&gt;springboot-demo&lt;/name&gt;
&lt;project&gt; 

</code></pre>
<!-- more -->
<h3 id="maven-依赖关系">Maven - 依赖关系：</h3>
<p>POM文件中的关系，主要有依赖，继承，合成等关系。</p>
<ul>
<li>
<p>scope：用来指定当前包的依赖范围</p>
</li>
<li>
<p>optional：设置指依赖是否可选，默认为false,即子项目默认都继承，为true,则子项目必需显示的引入，与dependencyManagement里定义的依赖类似</p>
</li>
<li>
<p>exclusions：如果X需要A,A包含B依赖，那么X可以声明不要B依赖，只要在exclusions中声明exclusion</p>
</li>
<li>
<p>parent：如果一个工程作为父类工程，那就必须添加pom,子系统要继承父类，也必须使用parent标签。对于子系统使用如下所示：</p>
</li>
<li>
<p>relativePath：为可选项，maven会首先搜索该地址，然后再搜索远程仓库。</p>
</li>
</ul>
<pre><code>&lt;parent&gt; 
    &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt; 
    &lt;artifactId&gt;my-parent&lt;/artifactId&gt; 
    &lt;version&gt;2.0&lt;/version&gt; 
    &lt;relativePath&gt;../my-parent&lt;/relativePath&gt; 
&lt;/parent&gt;
</code></pre>
<p>依赖引入：</p>
<pre><code>说明：properties 顾名思义就是配置文件，这里的 peoperties 是管理 jar 包的版本号的， 然后在后面的 dependencies 中 可以以 变量的形式调用 如： 
&lt;properties&gt;
 &lt;!-- 框架版本 --&gt;
	&lt;org.springframework.version&gt;3.2.4.RELEASE&lt;/org.springframework.version&gt;
 &lt;!-- Java版本 --&gt;
   &lt;java.version&gt;1.8&lt;/java.version&gt;
&lt;/properties&gt;

&lt;dependencies&gt;
    &lt;dependency&gt;
    	&lt;groupId&gt;org.springframework&lt;/groupId&gt;
    	&lt;artifactId&gt;spring-aop&lt;/artifactId&gt;
    	&lt;version&gt;${org.springframework.version}&lt;/version&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>
<ul>
<li>modules：多模块项目的标签，顺序不重要，MAVEN会自动拓展排序。使用如下所示：</li>
</ul>
<pre><code>&lt;!--子模块--&gt;
&lt;modules&gt;
    &lt;module&gt;ygb-service-config&lt;/module&gt;
    &lt;module&gt;ygb-service-bus&lt;/module&gt;
    &lt;module&gt;ygb-service-policy-center&lt;/module&gt;
    &lt;module&gt;ygb-service-letter-of-indemnity&lt;/module&gt;
    &lt;module&gt;ygb-service-authentication-center&lt;/module&gt;
&lt;/modules&gt;
</code></pre>
<!-- more -->
<h3 id="maven-构建设置">Maven - 构建设置:</h3>
<ul>
<li>build 这部分主要是对项目的构建过程进行配置，包括打包的方式、插件的安装等。配置如下所示：</li>
</ul>
<pre><code>&lt;!-- 构建管理 --&gt;
&lt;build&gt;
    &lt;!--构建工具插件管理--&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>
<p>常用POM 文件：</p>
<pre><code>完整 POM 参考：
&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;parent&gt;
		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
		&lt;version&gt;2.1.4.RELEASE&lt;/version&gt;
		&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;
	&lt;/parent&gt;
  &lt;groupId&gt;cn.seisys.kafka&lt;/groupId&gt;
  &lt;artifactId&gt;kafka-demo&lt;/artifactId&gt;
  &lt;version&gt;1.0&lt;/version&gt;
  &lt;packaging&gt;jar&lt;/packaging&gt;
	&lt;name&gt;kafka-demo&lt;/name&gt;

  &lt;properties&gt;
   &lt;java.version&gt;1.8&lt;/java.version&gt;
  &lt;/properties&gt;

  &lt;dependencies&gt;

	  &lt;dependency&gt;
		  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
		  &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
	  &lt;/dependency&gt;

	  &lt;dependency&gt;
		  &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
		  &lt;artifactId&gt;lombok&lt;/artifactId&gt;
		  &lt;optional&gt;true&lt;/optional&gt;
	  &lt;/dependency&gt;
	  &lt;dependency&gt;
		  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
		  &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
		  &lt;scope&gt;test&lt;/scope&gt;
	  &lt;/dependency&gt;


	  &lt;dependency&gt;
		  &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
		  &lt;artifactId&gt;lombok&lt;/artifactId&gt;
		  &lt;optional&gt;true&lt;/optional&gt;
	  &lt;/dependency&gt;
	  &lt;!--引入第三方jar-Mas jar--&gt;
	  &lt;dependency&gt;
		  &lt;groupId&gt;org.apache.kafka.clients&lt;/groupId&gt;
		  &lt;artifactId&gt;kafka-clients&lt;/artifactId&gt;
		  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
		  &lt;scope&gt;system&lt;/scope&gt;
		  &lt;systemPath&gt;${project.basedir}/src/main/resources/lib/kafka-clients-0.11.0.1.jar&lt;/systemPath&gt;
	  &lt;/dependency&gt;

	  &lt;dependency&gt;
		  &lt;groupId&gt;org.apache.kafka.clients&lt;/groupId&gt;
		  &lt;artifactId&gt;kafka&lt;/artifactId&gt;
		  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
		  &lt;scope&gt;system&lt;/scope&gt;
		  &lt;systemPath&gt;${project.basedir}/src/main/resources/lib/kafka_2.11-0.11.0.1.jar&lt;/systemPath&gt;
	  &lt;/dependency&gt;

	  &lt;!-- https://mvnrepository.com/artifact/commons-net/commons-net --&gt;
	  &lt;dependency&gt;
		  &lt;groupId&gt;commons-net&lt;/groupId&gt;
		  &lt;artifactId&gt;commons-net&lt;/artifactId&gt;
		  &lt;version&gt;3.6&lt;/version&gt;
	  &lt;/dependency&gt;
	  &lt;dependency&gt;
		  &lt;groupId&gt;commons-io&lt;/groupId&gt;
		  &lt;artifactId&gt;commons-io&lt;/artifactId&gt;
		  &lt;version&gt;1.3.1&lt;/version&gt;
	  &lt;/dependency&gt;
	  &lt;dependency&gt;
		  &lt;groupId&gt;cn.hutool&lt;/groupId&gt;
		  &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;
		  &lt;version&gt;4.5.7&lt;/version&gt;
	  &lt;/dependency&gt;
	  &lt;!-- https://mvnrepository.com/artifact/com.google.code.gson/gson --&gt;
	  &lt;dependency&gt;
		  &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;
		  &lt;artifactId&gt;gson&lt;/artifactId&gt;
		  &lt;version&gt;2.8.5&lt;/version&gt;
	  &lt;/dependency&gt;


	  &lt;dependency&gt;
		  &lt;groupId&gt;com.alibaba&lt;/groupId&gt;
		  &lt;artifactId&gt;druid&lt;/artifactId&gt;
		  &lt;version&gt;1.0.10&lt;/version&gt;
	  &lt;/dependency&gt;

	  &lt;dependency&gt;
		  &lt;groupId&gt;com.oracle&lt;/groupId&gt;
		  &lt;artifactId&gt;ojdbc6&lt;/artifactId&gt;
		  &lt;version&gt;11.2.0&lt;/version&gt;
	  &lt;/dependency&gt;

	  &lt;dependency&gt;
		  &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;
		  &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;
		  &lt;version&gt;2.0.0&lt;/version&gt;
	  &lt;/dependency&gt;

  &lt;/dependencies&gt;

	&lt;build&gt;
		&lt;plugins&gt;
			&lt;plugin&gt;
				&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
				&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
				&lt;configuration&gt;
					&lt;includeSystemScope&gt;true&lt;/includeSystemScope&gt;
				&lt;/configuration&gt;
			&lt;/plugin&gt;
		&lt;/plugins&gt;
	&lt;/build&gt;


&lt;/project&gt;

</code></pre>
<!-- more -->
<h1 id="参-考-资-料">🐼 参 考 资 料</h1>
<p><a href="https://www.yiibai.com/maven">Maven教程</a></p>
<p><a href="https://www.jianshu.com/p/242f2349eef1">POM配置标签</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linker 第 8 期  -  自由职业与数字货币]]></title>
        <id>https://aturx.github.io/post/linker-di-8-qi-zi-you-zhi-ye-yu-shu-zi-huo-bi</id>
        <link href="https://aturx.github.io/post/linker-di-8-qi-zi-you-zhi-ye-yu-shu-zi-huo-bi">
        </link>
        <updated>2020-02-22T03:15:30.000Z</updated>
        <content type="html"><![CDATA[<h2 id="国外网站">国外网站</h2>
<blockquote>
<p><a href="https://gitcoin.co/">Gitcoin</a><br>
通过GitHub登录，并完成开发任务，修复bug，完成开发需求，软件测试，代码review等都可以获取代币&gt;激励。我认为GitHub和数字货币结合有着天然的优势。</p>
</blockquote>
<hr>
<blockquote>
<p><a href="https://nomadlist.com/">全球数字游民</a><br>
数字游民，有电脑，有网。世界哪里都是家。这里有更详细的信息，包括每个地方，舒适度，环境是否适宜&gt;办公，网络状态是否良好。或许还能相个亲。</p>
</blockquote>
<hr>
<blockquote>
<p><a href="https://remoteok.io/remote-dev-jobs">远程OK</a><br>
一个提供远程办公的网站，有比较多远程办公需求提供。</p>
</blockquote>
<hr>
<h2 id="代币经济下的自由职业">代币经济下的自由职业</h2>
<blockquote>
<p>*<a href="https://freelanceforcoins.com">数字货币自由职业平台-FreelanceForCoins</a></p>
<p>*<a href="https://ethlance.com">以太坊自由职业平台-Ethlance</a></p>
<p>*<a href="https://www.cryptogrind.com/">比特币自由职业平台-CryptoGrind</a></p>
<p>*<a href="https://blocklancer.net/">区块链自由职业平台-Blocklancer</a></p>
<p>*<a href="https://www.cryptotask.org/">区块链任务接单平台-cryptotask</a></p>
</blockquote>
<p>以上五个网站，均通过数字货币进行结算。我只是抱着探索的态度，去尝试了一些。我个人认为，远程创作者 + 区块链代币激励 将会成为很好的一种模式促进自由职业与远程办公的发展。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[区块链周刊 - 第 1 期]]></title>
        <id>https://aturx.github.io/post/qu-kuai-lian-zhou-kan-di-1-qi</id>
        <link href="https://aturx.github.io/post/qu-kuai-lian-zhou-kan-di-1-qi">
        </link>
        <updated>2020-02-15T09:06:47.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="defi去中心化金融是什么">😀 DeFi（去中心化金融）是什么？</h2>
<p>DeFi的愿景是一切资产都可以Token化，自由地在全球开放的市场上交易。</p>
<p>加密货币的承诺是使货币和支付变得普遍，任何人不管他们在世界上的任何地方。</p>
<p>去中心化金融（DeFi）或开放式金融运动使这一愿景更进一步。 想象一下，有一种全球性、开放的服务可以替代你目前使用的所有金融服务--储蓄、贷款、交易、保险等等--全世界只要有智能手机和互联网连接，任何人都可以使用。</p>
<p>这在智能合约区块链上是可能的，比如 Ethereum。</p>
<p>“智能合约”是运行在区块链上的程序，可以在满足某些条件时自动执行。 这些智能合约使开发人员能够构建比简单地发送和接收加密货币更复杂的功能。 这些程序就是我们现在所说的分散式应用，或者 dapps。</p>
<p>你可以认为Dapp是一个建立在分布式技术上的应用，而不是由一个单一的、集中的实体或由公司来建立和控制的。</p>
<p>尽管其中一些概念听起来可能有些遥不可及——在世界不同地区的两个陌生人之间直接协商自动化的贷款业务，但中间没有银行——许多这样的应用程序如今已经上线。 就是那些 DeFi Dapps。</p>
<p>它们允许你创建稳定账户(加密货币，其价值与美元挂钩)，借出资金并从你的加密账户获得利息，获得贷款，用一种资产交换另一种资产，做多或做空资产，以及实施自动化的高级投资策略。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="defi去中心化金融是什么">😀 DeFi（去中心化金融）是什么？</h2>
<p>DeFi的愿景是一切资产都可以Token化，自由地在全球开放的市场上交易。</p>
<p>加密货币的承诺是使货币和支付变得普遍，任何人不管他们在世界上的任何地方。</p>
<p>去中心化金融（DeFi）或开放式金融运动使这一愿景更进一步。 想象一下，有一种全球性、开放的服务可以替代你目前使用的所有金融服务--储蓄、贷款、交易、保险等等--全世界只要有智能手机和互联网连接，任何人都可以使用。</p>
<p>这在智能合约区块链上是可能的，比如 Ethereum。</p>
<p>“智能合约”是运行在区块链上的程序，可以在满足某些条件时自动执行。 这些智能合约使开发人员能够构建比简单地发送和接收加密货币更复杂的功能。 这些程序就是我们现在所说的分散式应用，或者 dapps。</p>
<p>你可以认为Dapp是一个建立在分布式技术上的应用，而不是由一个单一的、集中的实体或由公司来建立和控制的。</p>
<p>尽管其中一些概念听起来可能有些遥不可及——在世界不同地区的两个陌生人之间直接协商自动化的贷款业务，但中间没有银行——许多这样的应用程序如今已经上线。 就是那些 DeFi Dapps。</p>
<p>它们允许你创建稳定账户(加密货币，其价值与美元挂钩)，借出资金并从你的加密账户获得利息，获得贷款，用一种资产交换另一种资产，做多或做空资产，以及实施自动化的高级投资策略。</p>
<!-- more -->
<h2 id="这些defi-dapps与传统银行或华尔街的同行有何不同">😄这些DeFi dapps与传统银行或华尔街的同行有何不同？</h2>
<ul>
<li>
<p>这些企业的核心业务不是由机构及其员工来管理，而是用代码(或上文提到的智能合约)来编写规则。 一旦将智能合约部署到区块链，DeFi dapps 就可以自己运行，几乎不需要人工干预(尽管实际上开发人员经常通过升级或错误修复来维护 dapps)</p>
</li>
<li>
<p>代码是透明的封锁在区块链上，可以受到任何人的审计。这在用户中建立了一种不同的信任，因为任何人都有机会理解合约的功能或发现它的缺陷。 所有交易活动也是公开的，任何人都可以查看。 虽然这可能会引起隐私问题，但交易在默认情况下是假名的，也就是说并不直接与你的真实身份联系在一起。</p>
</li>
<li>
<p>Dapps被设计为从运行的第一天开始—无论你是在美国还是中国，身处何处，都可以访问相同的DeFi服务和网络。当然，需要遵守当地法规，但从技术上来讲，大多数具有互联网连接的人都可以使用大多数DeFi应用。</p>
</li>
<li>
<p>“无需许可”即可参与，任何人都可以创建DeFi应用，任何人都可以使用它们。与当今的金融不同，没有监管机构或冗长的账户。用户直接通过其加密货币钱包与智能合约进行交互。</p>
</li>
<li>
<p>灵活的用户体验。不喜欢特定dapp的界面吗？没问题-您可以使用第三方界面，也可以构建自己的界面。智能合约就像一个开放的API，任何人都可以为其构建应用程序。</p>
</li>
<li>
<p>互向关联。新DeFi应用程序可以建立或由其他DeFi产品组合而成，如堆积木块-例如stablecoins，去中心社交，与市场预测可以结合起来，形成全新的产品。</p>
</li>
</ul>
<p>Defi 现在是密码领域增长最快的部分之一。 业内观察人士用一种独特的新指标——“ ETH locked in DeFi”来衡量吸引力。 目前，用户已经在这些智能合同中存入了价值超过6亿美元的加密货币。</p>
<p>好奇吗？ 让我们来仔细看看几个流行的 DeFi dapps，你今天就可以尝试一下。 你需要一个内置 dapp 浏览器的加密货币钱包(比如 Coinbase Wallet)来连接这些 dapps。</p>
<p>现在Dapps 尚在发展初期，所以DeFi 用户应该对新产品和新服务进行研究。 像任何计算机代码一样，智能合约可能会出现意想不到的编程错误和恶意攻击的攻击。</p>
<!-- more -->
<h2 id="去中心化银行-makerdao">😁去中心化银行: MakerDAO</h2>
<p>Maker 是一个稳定收益项目，其中每个稳定收益(DAI)与美元挂钩，并以加密形式的抵押品作为担保。 Stablecoin 提供了加密的可编程性，币值稳定，你能够看到“传统”加密货币比如比特币或以太币。</p>
<p>你可以尝试在 Maker Oasis dapp （绿洲） 上创建自己的 DAI 稳定代码。 Maker不仅仅是一个稳定的投资项目，它还渴望成为一家去中心的储备银行。 持有独立但相关的象征性货币 MKR 的人，可以对稳定费(Stability Fee)等重要决定进行投票(类似于美联储(Federal Reserve)的联邦公开市场委员会(Federal Open Market Committee)对联邦基金利率进行投票的方式)。</p>
<p>另一个具有不同体系结构的稳定币是 USD Coin (USDC) ，其中每个 USDC 令牌都由经审计的银行账户中所持有美元1:1锚定。</p>
<!-- more -->
<h2 id="借与贷-compound">😆借与贷: Compound</h2>
<p>Compound 是一种基于区块链的借贷 dapp-你可以借出你的数字货币并从中获得利息。 或者你可能需要一些钱来支付房租或者购买食品杂货，但是你的资金却被你的加密投资占用了？ 您可以将您的加密货币存入智能合约作为抵押品，并以此作为借款凭证。 复合合同自动匹配借款人和贷款人，并根据供给和需求动态调整利率。</p>
<p>其他流行的借/贷应用还有Dharma 和 dYdX。 LoanScan可以跟踪各种 dapps 的借贷利率，这样你就可以货比三家找到最好的利率。</p>
<!-- more -->
<h2 id="自动代币交换-uniswap">🤣自动代币交换: Uniswap</h2>
<p>Uniswap 是一个完全基于智能合约运行的加密货币交换服务，让你直接从钱包交易受欢迎的代币。 这与 Coinbase 这样的交易所不同，Coinbase 为你存储加密货币，并保存您的私钥以便妥善保管。 Uniswap使用了一种被称为自动做市的创新机制来自动结算接近市场价格的交易。<br>
其他流行的去中心的交换平台包括0x、 AirSwap、 Bancor、 Kyber、 IDEX、 Paradex 和 Radar Relay。 它们的体系结构都略有不同。</p>
<!-- more -->
<h2 id="预测市场-augur">😌预测市场: Augur</h2>
<p>Augur是一个去中心的预测市场协议。 使用 Augur，你可以对事件的结果进行投票。 像 Augur 和 Guesser 这样的预测市场平台还处于起步阶段，但是它们提供了一个展望未来的视角，用户可以利用大众的智慧做出更好的预测。</p>
<!-- more -->
<h2 id="组合资产-synthetix">😙组合资产: Synthetix</h2>
<p>Synthetix是一个平台，用户可以创建和交换黄金、白银、加密货币和欧元等传统货币的组合版本。 这些组合资产由多余的抵押品作为担保，这些抵押品被锁定在 Synthetix 合约中。</p>
<!-- more -->
<h2 id="无损储蓄游戏-pooltogether">😜无损储蓄游戏: PoolTogether</h2>
<p>Defi 的可组合性为无限的新可能性提供了条件。 Pooltogether 是一个无损失的游戏，参与者将 DAI 的固定资产存放在一个共同的罐子里。 每个月末，一个幸运的参与者赢得所有的利息，每个人都能拿回他们的初始存款。</p>
<!-- more -->
<h2 id="那么-defi-的下一步计划是什么呢">😒那么 DeFi 的下一步计划是什么呢？</h2>
<p>自人类文明开始以来，货币和金融就以这样或那样的形式存在着。 加密货币只是最新的数字化身。 在接下来的几年里，我们可能会看到我们在今天的金融系统中使用的每一个金融服务被重建为加密生态系统。 我们已经看到了为加密技术而建立的资产发行和交换、借款、贷款、托管和衍生产品。 下一步是什么？</p>
<p>第一代 DeFi Dapps 严重依赖抵押品作为安全保障。 也就是说，你需要已经拥有加密货币，并提供它作为抵押品，以借用更多的加密货币。 更多传统的无担保借贷将需要依赖于一个身份系统，这样借款人就可以建立信用并增加他们的借贷能力。 然而，与今天的身份和信用系统不同，去中心化的身份必须具有普遍性和隐私保护性。</p>
<p>我们也看到了保险领域的创新。 今天的许多 DeFi 贷款都是过度抵押的(这意味着贷款看起来本质上是安全的，因为它们拥有充足的储备资产)。 但是 DeFi 的黑天鹅是智能合约的漏洞。 如果一个黑客发现并利用 dapp 开源代码中的一个漏洞，数百万美元可能会在一瞬间耗尽。 像 Nexus Mutual 这样的团队正在建立一种分散的保险体系，这种体系将使用户变得安全。</p>
<p>我们看到的另一个趋势是更好的用户体验。 第一代的 dapps 是由区块链爱好者为区块链爱好者建造的。 这些 dapps 在展示令人兴奋的新 DeFi 可能性方面做得很好，但是在可用性方面还有待改进。 最新的 DeFi 应用程序正在优化设计和易用性，以便将开放金融服务推向更广泛的受众。</p>
<p>在未来，我们期待加密钱包将成为你所有数字资产活动的入口，就像今天的互联网浏览器是你获取世界新闻和信息的入口一样。 设想一个仪表板，它不仅显示您拥有哪些资产，还显示您在不同的开放金融协议(贷款、资金池和保险合同)中锁定了多少资产。</p>
<p>在整个 DeFi 生态系统中，我们也看到了向分散治理和决策的转变。 尽管 DeFi 中使用了“去中心化”这个词，但是今天的许多项目都有主密钥供开发人员关闭或禁用 dapps。 这样做是为了方便升级，并在代码出现问题时提供紧急关闭阀。 然而，随着代码变得更具实战性，我们预计开发人员将放弃这些后门开关。 DeFi 社区正在试验允许利益相关者对决策进行投票的方法，包括通过使用基于区块链的分散自治组织(DAOs)。</p>
<p>在开放的金融系统中，一些神奇的事情正在发生--加密技术正在把钱带到网上，我们看到了货币功能方面的一个巨大飞跃。 这是一个难得的机会，可以看到一个全新的行业从零开始。 Defi 空间将首先迎头赶上今天的金融服务业。 但是随着时间的推移，当建立金融服务的能力大众化给任何一个会编写代码的人时，我们甚至很难了解什么样的创新会出现。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Remix-IDE进行智能合约测试]]></title>
        <id>https://aturx.github.io/post/shi-yong-remix-ide-jin-xing-zhi-neng-he-yue-ce-shi</id>
        <link href="https://aturx.github.io/post/shi-yong-remix-ide-jin-xing-zhi-neng-he-yue-ce-shi">
        </link>
        <updated>2020-02-14T10:57:43.000Z</updated>
        <content type="html"><![CDATA[<h2 id="一-简-介">一、简 介</h2>
<p>Remix-IDE 是一个在线智能合约开发的网站，包含一些运行环境，可以在线上直接编写合约脚本，并且进行合约测试。<br>
本文完成通过完成一个智能合约脚本的测试过程，来达到熟练掌握Remix-IDE 以及智能合约的开发以及测试的目的。</p>
<hr>
<h2 id="二-remix-ide-布-局">二、Remix-IDE 布 局</h2>
<figure data-type="image" tabindex="1"><img src="https://remix-ide.readthedocs.io/en/latest/_images/a-layout1c.png" alt="image" loading="lazy"></figure>
<p>先简单看下界面中的每个部分有什么作用：</p>
<ol>
<li>
<p>图标面板（IconPanel）</p>
<p>单击以更改哪个插件显示在侧面板中，这里面从上到下依次有：<br>
文件浏览、切换脚本语言用Vyper、切换脚本语言用Solidity、运行换部署合约脚本、脚本的金泰分析（检测语法错误）、单元测试、插件管理</p>
</li>
<li>
<p>侧面板（SidePanel）</p>
<p>大多数（但不是全部）插件将在此处展示它的操作界面。如果你点击&quot;文件浏览&quot;，这里会显示当前脚本文件。</p>
</li>
<li>
<p>主面板（MainPanel）</p>
<p>主要用于编辑文件。在选项卡中可以是用于IDE编译的插件或文件。</p>
</li>
<li>
<p>终端（显示执行结果）</p>
<p>您将在其中查看与GUI交互的结果。您也可以在此处运行脚本。</p>
</li>
</ol>
<hr>
<h2 id="三-运-行-环-境">三、 运 行 环 境</h2>
<figure data-type="image" tabindex="2"><img src="https://remix-ide.readthedocs.io/en/latest/_images/a-hometab.png" alt="image" loading="lazy"></figure>
<p>RemixIDE 包含两种智能合约脚本语言环境，Solidity 和 Vyper。</p>
<p>如果你喜欢暗黑色的背景，你可以在这里设置：<br>
<img src="https://remix-ide.readthedocs.io/en/latest/_images/a-themes.png" alt="image" loading="lazy"></p>
<hr>
<h2 id="四-智-能-合-约-编-写">四、智 能 合 约 编 写</h2>
<p>与Python类似，这两种脚本语言的<br>
执行文件过程也基本相同。</p>
<p>虽然Python脚本执行为</p>
<pre><code>python file_name.py
</code></pre>
<p>使用vyper编译脚本</p>
<pre><code>vyper file_name.vy
</code></pre>
<p>使用solidity编译脚本</p>
<pre><code>solc file_name.sol
</code></pre>
<hr>
<p>此处，我们使用Solidity编写一个简单的智能合约，现在就算你都不理解也不要紧，后面我们会有逐行的讲解：</p>
<p><strong>Solidity智能合约 （一）</strong></p>
<pre><code>pragma solidity  &gt;=0.4.22 &lt;0.7.0;

contract SimpleStorage {
    uint storedData;

    function set(uint x) public {
        storedData = x;
    }

    function get() public view returns (uint) {
        return storedData;
    }
}

</code></pre>
<p>逐行讲解：</p>
<pre><code>pragma solidity &gt;=0.4.22 &lt;0.7.0;
//第一行就是告诉大家源代码
//使用Solidity版本大于0.4.0
//并且小于 0.7.0
contract SimpleStorage {}


// contract 说明这是一个合约
// SimpleStorage 是合约的名字，叫做“简单存储”
// 这个合约实现一个功能，就是
// 用户将一个数字存储到区块链
// 数据库中，其他用户可以访问

 uint storedData;
 
// 定义一个变量 storedData
 
 function set(uint x) public {
        storedData = x;
    }
    
// set() 函数，输入一个值 x
// 把x赋值给 storedData
// 完成数据的存储

  function get() public view returns (uint) {
        return storedData;
    }

// get() 函数，没有输入值
// 直接获取变量storedData的值
// 返回storedData的值

</code></pre>
<p>该合约能完成的事情并不多（由于以太坊构建的基础架构的原因）：它能允许任何人在合约中存储一个单独的数字，并且这个数字可以被世界上任何人访问，且没有可行的办法阻止你发布这个数字。当然，任何人都可以再次调用 set ，传入不同的值，覆盖你的数字，但是这个数字仍会被存储在区块链的历史记录中。随后，我们会看到怎样施加访问限制，以确保只有你才能改变这个数字。</p>
<p>简单的讲： <strong>这个智能合约帮你存一个数到区块链中。</strong></p>
<p>关于测试：</p>
<p>如何测试这个合约是否正确，那么就看用户set（x）写入到区块链中的数字，是否与他get()到的数字x相同。就知道是否数据写入的正确无误。</p>
<hr>
<h2 id="五-执-行-智-能-合-约">五、执 行 智 能 合 约</h2>
<p>在RemixIDE 文件浏览中，点击+图标，添加一个文件<code>Demo.sol</code><br>
将上面的合约脚本代码复制到该文件中。</p>
<p>一般会自动编译，编译报错会爆红色信息，否则在左侧，Solidity图标处，可以看到编译成功的√对勾。<br>
<img src="https://remix-ide.readthedocs.io/en/latest/_images/a-runtab2.png" alt="image" loading="lazy"><br>
点击侧边栏中部署图标，进行账户地址的相关配置，就可以将智能合约部署在区块链中。</p>
<p>但是在这之前，也就是本文的关键，我们需要对这个脚本进行测试。即：编写智能合约测试脚本，并执行测试。</p>
<hr>
<h2 id="六-编-写-智-能-合-约-测-试-脚-本">六、编 写 智 能 合 约 测 试 脚 本</h2>
<p>点击左侧，<img src="https://remix-ide.readthedocs.io/en/latest/_images/a-user-testing-icon.png" alt="image" loading="lazy">进入单元测试。</p>
<p>内容如下：<br>
<img src="https://remix-ide.readthedocs.io/en/latest/_images/a-unit-testing-feature.png" alt="image" loading="lazy"></p>
<p>点击<code>Generate test file</code>生成测试脚本。<br>
生成的后缀是'_test'的测试文件的基本模板。<br>
改名为<code>Demo_test.sol</code>,并编写如下内容进行测试：</p>
<pre><code>pragma solidity &gt;=0.4.22 &lt;0.7.0;
import &quot;remix_tests.sol&quot;; // this import is automatically injected by Remix.
import &quot;./Demo.sol&quot;;

contract DemoTest {
   
    SimpleStorage simpleStorage;  //定义合约变量     
   
    function beforeAll () public {
        
         simpleStorage = new SimpleStorage();   // 创建一个合约对象  simpleStorage
  
    }
    
    function checkNumberRight () public {
        // 使用 set（）函数设定 x数值为10 ，将其写入了simpleStorage中 
        simpleStorage.set(uint(10));
        
        Assert.equal(simpleStorage.get(), uint(10), &quot;simpleStorage == 10&quot;);
    }
    
   
}
</code></pre>
<p>先勾选<code>RunTests</code>下面的测试文件，然后点击<code>RunTests</code>进行合约测试。</p>
<p>需要了解的基本的合约测试知识：</p>
<pre><code>除此之外，Remix还允许使用一些特殊功能来使测试更具结构性。他们是：

beforeEach() -每次测试前运行
beforeAll() -在所有测试之前运行
afterEach() -每次测试后运行
afterAll() -在所有测试后运行
</code></pre>
<p>这个脚本，主要用到了<code>beforeAll ()</code>在测试之前来创建自己合约的对象。</p>
<hr>
<h2 id="七-智-能-合-约-测-试">七、智 能 合 约 测 试</h2>
<p>逐行解释测试脚本：</p>
<pre><code>pragma solidity &gt;=0.4.22 &lt;0.7.0;  // 如上所述， 进行solidity 版本的设定
import &quot;remix_tests.sol&quot;; //引入 Remix自动测试的库 默认写即可
import &quot;./Demo.sol&quot;;  // 重要： 引入你要测试的“智能合约”

contract DemoTest {   // 测试函数命名
   
    SimpleStorage simpleStorage;  //定义合约变量     
   
   
    // 该函数在执行测试之前执行，先把你的合约创建并赋值给一个对象
    function beforeAll () public {
         simpleStorage = new SimpleStorage();   
         // 创建一个合约对象  simpleStorage
    }
    
    
    // 重要：测试函数
    function checkNumberRight () public {
        // 使用 set（）函数设定 x数值为10 ，将其写入了simpleStorage中  
        simpleStorage.set(uint(10));
        
        // 现在测试simpleStorage的值是否等于 你输入的值10 
        // 用 get()函数获取simpleStorage的值
        // uint(10)  表示数字 10
        // Assert.equal() 表示是否两者相等，不相等，报错提示，测试不通过
        Assert.equal(simpleStorage.get(), uint(10), &quot;simpleStorage != 10&quot;);
    }
    
   
}
</code></pre>
<p>了解并完成了测试脚本后，并勾选了对应的文件，就可以点击<code>RunTests</code>运行脚本测试：<br>
<img src="https://remix-ide.readthedocs.io/en/latest/_images/a-unit-testing-run-result.png" alt="image" loading="lazy"></p>
<p>结果如上，则表示通过测试脚本。</p>
<hr>
<h2 id="八-网-站-地-址">八、网 站 地 址</h2>
<p><a href="http://remix.hubwiz.com">RemixIDE-英文</a></p>
<p><a href="http://remix.hubwiz.com">RemixIDE-中文</a></p>
<p><a href="https://solidity-cn.readthedocs.io/zh/develop/">Solidity-文档</a></p>
<p><a href="https://vyper.readthedocs.io/en/latest/">Vyper-文档</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[20多岁该拥有的习惯和实践]]></title>
        <id>https://aturx.github.io/post/20-duo-sui-gai-yong-you-de-xi-guan-he-shi-jian</id>
        <link href="https://aturx.github.io/post/20-duo-sui-gai-yong-you-de-xi-guan-he-shi-jian">
        </link>
        <updated>2020-02-14T04:36:32.000Z</updated>
        <content type="html"><![CDATA[<p>20多岁是你生命中最重要的十年。 在这段时间里，你塑造了很多习惯和练习，这些习惯和练习你可能会在30多岁、40多岁甚至更长的时间里保持下来。 然而，许多20多岁的年轻人并没有认真思考他们在这十年中的决定和行动将如何最终塑造他们未来的身份。 他们希望自己以后能够做出改变，但这种假设通常被证明是错误的。</p>
<h2 id="事-业">🤓  事 业</h2>
<p>在你20多岁的时候，你可能会认为你的职业道路有很多选择。 你相信你可以做很多不同类型的工作。 严格来说是这样的。</p>
<p>然而，在晚年，人们倾向于把他们的职业道路包装成他们的身份。 他们不仅仅是做一份工作。 他们就是那份工作。 40多岁的人不仅仅是卖房子，他们还是房地产经纪人。 人们不仅仅是做客户服务，他们是客户服务代表。 人们不仅仅是开发程序的人，他们就是程序员。</p>
<p>我多次看到20多岁的人从事一种临时性的工作，他们知道这不是他们下半辈子想做的事情。 他们只是找了一份工作来支付一段时间的开销，期望稍后能得到更多的灵感。 然而，20年过去了，他们仍然在做同样的工作，只是现在这不仅仅是一份工作。 这是他们身份的一部分。 他们不会说，“我在做一些会计工作。” 他们说，“我是个会计。”</p>
<p>他们从不希望那份临时工作成为他们的长期职业。 事情就这么发生了。 在做出最初决定的一年到十年之间，他们失去了将工作与身份分离开来的能力。 在某种程度上，他们不得不承认(也许只是下意识地) ，“我干这行这么多年了，我想我一定是个会计师。” 当他们不得不大声说出这句话的时候，你会在他们的眼中看到一丝悲伤。 天啊，我上次高中同学聚会上见过很多这样的场面！</p>
<p>当你20多岁的时候，要格外小心，不要因为做一些临时工作而陷入长期的职业生涯。 一个好的经验法则是问问你自己是否还想在10年后继续做这份工作。 如果你的回答是“绝对不行! ” 或者愤世嫉俗的笑声，也许你应该经过，等待一个更好的位置。 如果你急需资金，没问题，但是要小心短期决定变成长期模式的可能性。 如果你没有一个明确的退出策略，你可能会发现退出时间还有几十年。</p>
<h2 id="媒-体-消-费">😋 媒 体 消 费</h2>
<p>想想你在20多岁时养成的媒体消费习惯(包括社交媒体)。 在你40多岁的时候，你还想保持这些习惯吗？</p>
<p>有些习惯可能会让你感觉良好，比如时不时地阅读一些好书或沉迷于一部好电影或视频系列片。 如果你想继续做几十年，这样的做法可能会让你感到恐惧。</p>
<p>你现在建立的媒体消费习惯中，哪些是你不想拖到30多岁、40多岁甚至更久的？ 注意那些令人恐惧的行为，在你还能做到的时候放弃或取代它们。</p>
<p>当我问那些热衷于社交媒体的用户，10年后他们是否还想使用 微博 和 抖音 时，几乎每个人都会说，“当然不！ 那就太悲哀了，想都不要想! ” 即使是那些使用这些服务进行市场营销的人也不愿意在10年后继续使用这些服务。 人们显然对这些服务又爱又恨。 他们喜欢社会福利，但不喜欢那些服务安装在他们身上的焦躁不安、令人上瘾的习惯。 人们喜欢社交，但他们不喜欢沉迷于社交媒体。</p>
<p>许多40多岁的人现在仍然沉迷于社交媒体习惯，因为他们从20多岁或30多岁就开始使用社交媒体(当时无论什么形式的社交媒体都可用)。 如果你五年前问他们这个年纪还会不会每天上 微博，他们中的许多人会说，“不可能! ” 这些人在50多岁的时候还会继续这种模式吗？ 可能吧。</p>
<p>许多每天查看社交媒体的20多岁的年轻人将来有一天会成为每天查看社交媒体的40多岁的年轻人。 媒体可能会改变形式，但是习惯仍然存在。 这种行为模式可能会持续下去。</p>
<p>不管你现在有什么媒体习惯，如果我问你30天后是否还会保持这些习惯，你会说什么？ 大多数人可能会承认，一个月后他们还会有同样的习惯。 现在，如果我等待30天，然后问你同样的问题，关于你对第60天的期望，你会说什么？ 你可能会给出同样的答案。 几十年来都是这样。</p>
<p>期望个人的转变在以后发生通常等同于无限期地拖延。 在未来，你仍然会把这种改变投射到未来。 因此，如果你期望在未来五年内做出改变，那么五年后，你仍然期望未来的自己在五年内做出改变。 改变永远是将来的某一天，而不是现在。</p>
<p>这就是为什么在生命早期养成良好的习惯是如此重要。 是的，你仍然可以改变以后，但这将是更困难的。 如果你在20多岁的时候成为一个媒体上瘾者，那么你可能在40多岁、50多岁甚至更大的时候还是一个媒体上瘾者。</p>
<p>消费大量的电视节目、电影、新闻、色情等也是如此。 你越早养成这些习惯，就越难改掉它们。</p>
<p>不要自欺欺人地告诉自己以后会纠正这些问题。 如果你发现自己正在偏离航线，那么现在就是修正航线的时候了。 如果你现在不愿意改变，你愿意判决自己在未来至少20年内保持这些习惯吗？ 这是你此时此刻的选择。</p>
<h2 id="健-康">😍 健 康</h2>
<p>我参加过很多健康会议，通常大多数与会者都在40多岁或更大的年龄。 在这样的活动中看到许多20多岁的年轻人是不寻常的，除非这个活动是关于健康的(而不是全面的健康和疾病预防)。 20多岁的人通常认为，当他们老了或者碰巧生病的时候，他们可以改善自己的健康习惯。 他们认为，如果有必要的话，有足够的时间进行改进。</p>
<p>这种心态的问题在于，我们在20多岁(以及更年轻的时候)养成的健康习惯很可能会延续到未来几十年，而且我们保持这些习惯的时间越长，就越难改变。</p>
<p>几年前，我们之前的一个研讨会参与者死于癌症。 他当时28岁。 尽管在他生命的最后18个月里，他意识到自己的生存受到了威胁，但他发现要让自己吃更健康的食物真的很难，至少要给自己额外的优势。 这个诊断给他敲响了警钟，当然他得到了很多关于他可能、能够、应该改变什么的建议，但是这并没有自动让他改变。 我想这可能只是增加了他的压力。</p>
<p>你可能认为一个癌症诊断会给你动力去极大地改善你的健康习惯，但是你可能会惊讶于改变方向是多么的困难，即使你的生命处于危险之中。 试想一下，在面对化疗、放疗、手术、解毒、替代疗法等决定的同时，试图改变这些习惯。 在这段时间里，许多人渴望舒适和安全感，而这种渴望来自于熟悉的事物，而不是新事物。</p>
<h2 id="临-时-工-作-守-则">😛 临 时 工 作 守 则</h2>
<p>即使你想在20多岁的时候养成一些不那么好的习惯(我完全理解) ，我还是建议你在这十年中抽出一些时间，在你生活的不同领域暂时建立一些真正积极的习惯。 然后，即使你在之后偏离了这些做法，在你以后的生活中的某个时刻，如果你想要或者需要这样做的话，重新加载它们也会变得容易得多。</p>
<p>对于这个积极的练习期，我建议大约6-12个月。 你可以从30天的试用期开始，一旦到了第30天，就继续下去。 或者你可以提前做6-12个月，知道这对你未来的自己有多重要。</p>
<p>我26岁的那年，我制定了一个新年计划，那就是每天进行至少25分钟的有氧锻炼。 我还每周上3-4次武术课，但我没有把这些课程计入我的25分钟。 我想如果我坚持一整年，在以后的生活中保持这个习惯会容易得多。 我成功地保持了这个决心，在最初的几个星期之后，这个决心变得相当容易，而且它建立了一个从那以后就很难偏离的模式。 虽然我有时会放松一下，一连好几个星期都不锻炼，但我总是会回到一些常规的锻炼中去，而且我总是很容易重新开始锻炼。 每次我需要重新开始，我只是重新加载一个良好的惯例。</p>
<p>我27岁的那年，我连续六个月吃100% 的生食，之后我又开始吃大部分熟食。 现在，无论何时我想再次吃100% 的生食，比如如果我想体验更好的能量或更清晰的思维，我发现很容易重新养成这些习惯，一次吃几个星期的生食。 这些行为已经很熟悉和舒适了，因为我在重新加载旧的行为，而不是训练新的行为。</p>
<p>如果你曾经在旅途中遇到严重的健康问题，你可能会发现当时很难改善你的健康习惯，尤其是对你来说压力很大的时候。 但是如果你只是重新加载你过去熟悉的实践，那就容易多了。 然后你可以迅速转向你工具箱里最有益的练习，比如生食，每日冥想，瑜伽，你最好的排毒方案，等等。 你不需要从零开始学习这些实践。</p>
<p>我感到很幸运，因为我在20多岁的时候养成了一些好的长期习惯和暂时的习惯，而不知道这些习惯在以后的生活中会有多大的益处。 我鼓励你在20多岁的时候也建立很多这样的工具箱; 在以后的生活中你会很高兴你这样做了。</p>
<h2 id="未-来-的-自-己">🤗 未 来 的 自 己</h2>
<p>总有一天，你未来的自己将不得不面对你在20多岁时养成的习惯和做法所带来的后果。 这个人在回顾你的决定时，是带着遗憾和鄙视，还是带着感激和欣赏？ 他 / 她是否会陷入令人讨厌的上瘾状态，或者受到授权习惯的支持？ 他 / 她是否有一个完善的工具箱，可以随意重新装载的积极实践？</p>
<p>20多岁的我犯了很多错误。 他失败的次数比成功的次数多。 但我真的很感激他为自己的成长付出了这么多，不断学习，不断尝试，没有放弃。 直到今天，我仍然受益于他在90年代所做的个人发展工作。 他让我成为了一个企业家、一个跑步者和一个素食主义者。 他从不抽烟。 他没有酗酒。 在那十年的开始，他有犯罪记录，还被学校开除ーー这根本不是一个好的开始。 我十几岁的时候的自己欺骗了他，我深深地感激他扭转了局面，学会了同情和关心他未来的自己。 他让我真正享受和欣赏我的40岁。</p>
<p>在我20多岁的时候，我经常想象和未来的自己对话，通常是5-10年后。 我可以想象，如果我继续保持清醒成长，到那个时候，我会成为什么样的人。 我会征求他的意见。 我会倾听他的回答。 这是一个强有力的实践。 这让我仔细思考我在那十年里做出的决定会如何影响我30多岁的自己，40多岁的自己，甚至更多。</p>
<p>我提醒自己今天继续这个练习，对我50多岁和60多岁的自己有一些同情。 我想让他在我能影响的范围内度过愉快和充实的岁月，即使这意味着在我40多岁的时候要承担一些额外的挑战。</p>
<p>当你在当前的十年里致力于个人成长时，尽你最大的努力去感受对未来自己的同情。 把那个人看作是真实的，立刻反映出你今天所做决定的结果。 你有多在乎他 / 她？ 你能送给他 / 她一些爱吗？ 你今天能不能多付出一些他 / 她会感激的努力？</p>
<p>专注于你对未来自己的愿景: 快乐、健康、被爱、富足，以及任何其他对你重要的积极品质。 然后回到现在，想想你未来的自己会怎么看待你现在的做法。 哪些问题会引出一句谢谢？ 什么会引出一个请成长过去这个？</p>
<p><strong>如果你发现需要做出改变，那么现在就开始吧。 这是属于你的时刻。</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linker 第 7 期  -  免费抠图软件推荐]]></title>
        <id>https://aturx.github.io/post/linker-di-7-qi-mian-fei-kou-tu-ruan-jian-tui-jian</id>
        <link href="https://aturx.github.io/post/linker-di-7-qi-mian-fei-kou-tu-ruan-jian-tui-jian">
        </link>
        <updated>2020-02-13T07:13:37.000Z</updated>
        <content type="html"><![CDATA[<p>对于一些图片的抠图工作，也是需要用到一些免费的抠图网站，所以推荐使用如下在线网站及软件：</p>
<h2 id="在-线-网-站">😀 在 线 网 站</h2>
<p><a href="https://www.gaoding.com/koutu">稿定抠图（在线）</a></p>
<p><a href="https://www.fotor.com.cn/">懒设计（在线）</a></p>
<p><a href="https://818ps.com/koutu/?route_id=15815774913510&amp;route=1,&amp;after_route=1">怪兽抠图（在线）</a></p>
<p><a href="http://koutu.fjdaze.com/">大泽抠图（在线）</a></p>
<h2 id="ai-抠-图">😃 AI 抠 图</h2>
<p><a href="https://www.remove.bg/zh">AI智能抠图</a></p>
<h2 id="软-件-抠-图">😅  软 件 抠 图</h2>
<p><a href="https://d.appinn.com/adobe-photoshop-mix/"> Photoshop Mix 应用 （软件）</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MetaMask（小狐狸）的学习与使用]]></title>
        <id>https://aturx.github.io/post/metamaskxiao-hu-li-de-xue-xi-yu-shi-yong</id>
        <link href="https://aturx.github.io/post/metamaskxiao-hu-li-de-xue-xi-yu-shi-yong">
        </link>
        <updated>2020-02-12T11:51:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="一-metamask-是什么并且有什么用">一、 MetaMask 是什么并且有什么用？</h2>
<p>MetaMask 是一个浏览器插件。</p>
<p>MetaMask是一个桥梁，允许你通过浏览器访问区块链所在的分布式网络。</p>
<p>它允许你在你的浏览器中运行 Ethereum Dapps，而不需要运行一个完整的 Ethereum 节点。</p>
<p>你可以在 Chrome、 Firefox、 Opera 和新的 Brave 浏览器中安装 MetaMask 插件。 如果你是一个开发人员，你可以现在就开始使用 MetaMask 进行开发。</p>
<p>它包括一个安全的身份保密库，提供一个用户界面来管理不同站点的身份，并签署交易。</p>
<p>它使命是让尽可能多的人能够轻松使用以太坊。</p>
<p><a href="https://metamask.io/">MetaMask官网</a></p>
<hr>
<h2 id="二-chrome中metamask的安装">二、 Chrome中MetaMask的安装</h2>
<p>从GitHub上下载插件源文件：<br>
<a href="https://github.com/MetaMask/metamask-extension/releases">下载</a></p>
<p>1.打开Settings&gt; Extensions。</p>
<p>2.检查“开发人员模式”。</p>
<p>3.或者，使用URL： chrome://extensions/输入在地址栏中访问插件管理页面</p>
<p>4.点击顶部的“打包拓展程序”。</p>
<p>5.导航到你的metamask-plugin/dist/chrome文件夹。</p>
<p>6.点击Select进行选择你下载好的插件文件。</p>
<p>7.通过chrome://settings/languages更改为您的语言环境</p>
<p>8.重新启动浏览器并在您的语言环境中测试插件</p>
<p>现在你已经有了MateMask插件，可以单击“检查视图”以查看其开发控制台，通过修改JavaScript 的 contexts 来找到MateMask的控制台。</p>
<p>如果网络畅通，还有更简单的方式，就是直接从Chrome商店，搜索MateMask进行安装下载。</p>
<hr>
<h2 id="三-metamask的使用">三、MetaMask的使用</h2>
<p>初次使用，只需安装提示，进行注册和密码的设定以及密钥的获取，最后必须将自己的密钥种子安全的保存好，丢了将无法找回自己的数字货币。</p>
<p>成功登陆后，就可以切换到以太坊网络，发起自己的交易了。</p>
<p>对于其他的区块链网络也同样使用，并且可以对自己开发的区块链项目进行测试。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[25年没有工作]]></title>
        <id>https://aturx.github.io/post/25-nian-mei-you-gong-zuo</id>
        <link href="https://aturx.github.io/post/25-nian-mei-you-gong-zuo">
        </link>
        <updated>2020-02-12T02:57:45.000Z</updated>
        <content type="html"><![CDATA[<p>我已经有25年没有为别人工作了，所以我想和大家分享一些关于失业生活的想法。</p>
<h1 id="自-由-选-择">😀 自 由 选 择</h1>
<p>没有工作最基本的好处正是你所期望的。 有更多的自由去选择如何度过你的时间和创造什么样的生活。 这确实是一个很大的好处，但是需要很多年才能完全实现。</p>
<p>当你没有被一份工作束缚时，很明显你要对自己的事务负责，你需要自己做出重大决定。 这种程度的自由有时会让人感到无法抗拒，想要在头六个月里创造出一种精湛的生活是不现实的。 你仍然会被自己在精神上和身体上渴望自己能现实的目标所限制。</p>
<p>在这条道路上，你的个人缺点导致你的生活方式受到限制，所以这几乎可以说是一条以成长为导向的道路。</p>
<p>这也是一条自信之路。 有一次我有了一份工作，我成为了一名雇员，因为我真的不相信自己，而且我觉得我需要一段时间的服从命令的稳定作用。 几个月后，我意识到我能够也应该相信自己能够过自己的生活，而不是雇一个老板来为我管理一部分生活。 我当然会犯一些错误，但我会从中学习并成长。 事实也的确如此。</p>
<h1 id="实-现-目-标">😁 实 现 目 标</h1>
<p>我喜欢我能够实现各种各样的个人目标，如果我一直有一份工作的话，这些目标是很难实现的。 我创作并发行了几款电脑游戏。 我写了一本书，看到它以多种语言出版。 我曾经担任一家协会的主席。 我建立了两个成功的企业。 我去过很多我一直想去的地方，比如巴黎、伦敦、柏林、罗马、阿姆斯特丹等等。 我建立了两个成功的论坛社区。 我接受过武术训练，还跑过马拉松。 我设计并举办了16个为期三天的工作坊。 我交了一些不同寻常的有趣的朋友。</p>
<p>或者我可以在过去的25年里一直从事正规的工作，这样的话，我可能就不会完成如此多的个人目标。 我宁愿建立一个事业而不是拥有一个生活。 与其收集这么多美好的回忆，我不如回顾一下我过去更加平凡的时间线。 我相信我仍然会取得很多成就，但是那些成就会少一些变化，多一些限制。</p>
<p>与其为实现雇主的目标而工作，我更喜欢为自己的目标而全职工作。 我不需要把我的目标挤进我的下班时间。 我甚至不需要把它们挤进我的工作时间。 如果一个目标对我来说足够重要，我可以把工作放在一边，全力以赴地追求目标。</p>
<p>今年我最大的目标就是创建和启动清醒成长俱乐部，这是一个我已经为之工作了几个月的长期项目。 这确实是一个挑战，我很喜欢与其他个人成长爱好者共同创造它的过程。 如果我的工作占用了我的时间和精力，我无法理解我将如何处理这样一个项目。</p>
<p>我的工作与我的技能保持同步也是一件很棒的事情，因为我决定了要设定什么样的目标。 我不必因为我的工作太容易或压力太大而感到无聊。 通过明智地选择目标，我可以让自己保持在激励的最佳状态。 这导致了高爆发的动力，在这种情况下，每天花12个多小时进行刺激性的工作是很有趣的，然后是长时间的休息、玩耍和社交时间。</p>
<p><strong>没有什么能代替你掌控自己的事业，成为自己的船长。</strong></p>
<h1 id="自-我-表-达">😆 自 我 表 达</h1>
<p>这条道路的一个关键好处就是比起一直有工作，我能够更一致地表达自己的价值观。 我越是沿着这条路走下去，它就越是让我意识到我的生活是我的责任，我不必像其他人那样生活。 我可以按自己的方式做事，因为我没有一个公司来决定我如何管理我的时间或处理我的事务。 我不是别人机器上的齿轮。</p>
<p>这当然需要承担更多的责任。 当我犯错误的时候，我不能转过身去责怪我的老板或公司。 我有更多的自由去尝试，去冒险，去失败，所以对我的结果的责任更加明显。 我不能仅仅抱怨过多的官僚主义或公司政治来让自己摆脱困境。 我总是被我的生活变成什么样所困扰。</p>
<p>许多有工作的人不得不处理与雇主之间的价值观冲突。 例如，你可能关心帮助客户解决他们的问题，但也许你的雇主希望你推动更多的销售。 或者，当你的公司屈从于垃圾食品和苏打水的文化时，你可能珍视良好的健康习惯。 而且很多时候，雇主的价值观会发生混乱的转变，这种转变是不明确的，所以你永远不知道你是否与他们保持一致。</p>
<p>价值观冲突是生活的一部分，但是没有工作，我会从日常生活中消除许多这样的问题，这样我就能更和谐地表达我的价值观。 我可以写任何我想写的话题，而不用对我的想法进行审查。 当我在工作的时候吃午饭，所有的食物都是素食。 我的网站没有第三方的广告，因为我不想让杂乱的东西分散读者的注意力。 我想休多少假就休多少假，没有老板会抱怨。</p>
<p>如果你享受自我激励，这个方法很有效。 如果你需要有人为你的每一个成就拍拍你的背，比如从你的老板那里得到一个积极的评价，你可能会错过别人正式承认你的成功。 没有工作，你的动力必须更加内在才能保持在正轨上。 你需要满足于实现你的目标和表达你的价值的自然回报，因为有时候你是唯一关心或注意到的人。</p>
<h1 id="金-融-自-由">😂 金 融 自 由</h1>
<p>我花了好几年时间，经历了一次破产，才达到我想要的富足程度。 许多企业家在创业之初都会挣扎，因为有太多东西需要学习，也有太多可能犯的错误。 但是如果你聪明，灵活，并且愿意向那些有更多经验的人学习，你最终可以在不需要工作的情况下享受财务上的富足。 这意味着金钱不再是创造你想要的生活方式的严重限制。</p>
<p>当金钱充裕时，时间显然是最稀缺的资源。 因此，拥有更多的财务自由实际上可以激励你改善你的时间管理和克服拖延症。 你很快就会意识到金钱本身没有力量。 金山银山只是坐在那里，默认什么也不做。 你该思考如何明智的花钱，花钱是需要时间的。</p>
<p>正如许多建立了被动收入流的朋友所发现的那样，获得财富并不能自动创造出美好的生活。 远非如此！ 你仍然需要把你的时间、精力和智力投入到弄清楚如何利用你的时间。 即使你只是到处旅行，也需要努力去找出下一个目的地。 <strong>想清楚每天要做什么是需要努力的。</strong> 如果你不小心，如果你允许自己放松个人成长，你可能会陷入抑郁的低潮。</p>
<p>有更多的钱并不能解决你的问题。 它只会给你一系列不同的问题去处理。 富足后的挑战并不比富足前的挑战容易，但在某些方面，在富足后更容易陷入低迷，因为你没有那么大的财务压力迫使你采取行动。 你必须学会如何用积极的行动来激励自己，即使在没有经济压力的情况下。 对有些人来说，这真的很难做到。</p>
<p>我知道，这是一个令人羡慕的问题，但实际上，<strong>当金钱不再是一个限制因素时，如何花费时间是一个真正的挑战。</strong></p>
<p>我明白了金钱对我来说是一个彻头彻尾的可怕的动力。 即使在我破产的时候，我也不会对通过行动步骤来赚更多的钱感到非常兴奋。 每当我试图赚更多的钱时，我都会遭遇失败、阻力和挫折。 我通往富足的道路是专注于创造一个有目的和充实的生活，不管我有多少钱。 这种心态就是我通往富足的道路。</p>
<p>回顾过去，这是有道理的，因为金钱是一种社会工具——实际上它是一种社会债务——试图让人们欠你的债并不是很鼓舞人心。 专注于社交方面而不是乐器方面会使世界变得不同，因为从那时起，你就会考虑做一些对你的人类同胞有意义的事情。 社会方面让你采取行动，导致社会交换，借此金钱可以最终流向你。 金钱通过其他人流向你。 如果你过于关注金钱，人们方面可能会阻碍你获得金钱。</p>
<p>我认为我们中的很多人为了避免处理更大的、更可怕的挑战而使我们的财务问题长期存在，比如在我们的死亡计时器倒计时的时候如何投资我们宝贵的时间。 应对资金匮乏带来的挑战可能不那么痛苦，而不是面对更难回答的问题，比如我下一个十年该做什么？ 有时候更容易担心的是账单，而不是你的人际关系，你的人生目标，或者你的整个存在。</p>
<h1 id="寻-找-最-佳-节-奏">😍 寻 找 最 佳 节 奏</h1>
<p>为了让自己感觉脚踏实并且有合理的生产力，我需要在我的生活中有一些方案。 从某些方面来说，没有工作更容易做到这一点，但从另一些方面来说，就更难了。 我没有获得一份工作的必须任务，但我可以定义自己的工作节奏，这可能会更好地匹配我的个性和目标。 我也可以更好地整合我的工作和个人生活。 我的个人世界和我的商业世界可以是同一个世界。</p>
<p>我今天像我平常一样。 我早上5点起床，一边跑步一边听一些播客; 做一些伸展运动; 坐在公园里思考生活、宇宙和一切; 早餐吃燕麦粥和新鲜的蓝莓; 开始我的一天工作。 我喜欢以有氧运动开始我的每一天，因为它是一个即时的情绪助推器，它加强了我的自律，它重新平衡了荷尔蒙和神经传递素，让我觉得精神敏锐的来源。</p>
<p>当我有工作的时候，我并不那么在意优化我每天的成长目标。 我的工作效率和结果之间存在着脱节。 作为一名员工，我有时会为自己每天完成的实际工作量如此之少而感到自豪。 我不喜欢我的老板，特别是因为他的坏脾气和他使用恐惧战术来管理人，所以也许徒劳无益是我惩罚他这样一个混蛋的方式。</p>
<p>然而，如果没有工作，徒劳无益是毫无意义的，因为很明显，我正在浪费我宝贵的生命。 所以我非常有动力保持敏锐，每天挤出很多时间。 如果我不能保持高标准，我就会为此受苦，除了我自己没有人可以责怪。</p>
<p>如果我懈怠了，我可以随时重新启动自己。 我不必等到轮班或周末结束。 每当我体验到这些黄金意识提升时，我可以设定新的目标或转向不同的节奏。 如果我想开始一个新的习惯试验，一旦我准备好了，我就可以立即开始。 我不需要按照雇主的时间表工作。</p>
<p>如果我感到没有动力或精疲力尽，我可以从第二天开始休假(或者在某些情况下，同一天)。 我可以在假期里想呆多久就呆多久。 我已经不止一次地休息了30多天。 休息整整一个月是非常有助于恢复精力的，而且当我回来的时候，我通常会马上开始跑步。</p>
<p>我写作是因为我有了写作的灵感，而不是雇主指定的时间表。 我不会武断地对自己说，“我今天必须写点东西。” 吸引我来到键盘前的是我突然想到的一个点子。 我已经连续七个星期没有写博客了，这完全没问题。 我(或我的读者)不适合在日程表上胡说八道。 我宁愿只有当我有灵感去交流时才写作。</p>
<p>现在已经不是工业时代了。 朝九晚五的工作时间表并不适合当今创造性知识工作者的最佳机会。 我感到很幸运，因为没有人把这样的时间表强加给我。 发现自己最好的节奏，使我能够在这些年里为1亿读者创作出200万字的作品。</p>
<p>我最好的工作节奏很可能会受到雇主的惩罚。 我喜欢每天工作12个小时以上，有时一连工作几个星期。 然后我需要时间消失几个星期，旅行，探索，并转换到一个不同的生活模式-有时提前不到24小时通知。 在这段休息时间里，我的潜意识继续在后台工作，咀嚼问题，经常给我新鲜的想法，帮助我找到新的目标。 最终，我再也无法抑制创造性的压力，我渴望回到工作模式，进入另一个周期。 在我最好的时候，我是一个突击作业者，而不是按部就班者。 但是，什么样的雇主会尊重这种工作模式呢？ 如果你找到一个这样的雇主，也许这是一份你真正应该考虑的工作。</p>
<h1 id="社-会-自-由">😏 社 会 自 由</h1>
<p>如果我有工作，我可能每天都和同样的人交往，这会导致社交生活停滞不前。 我喜欢自由选择我每天交往的人，而不是继承雇主分配给我的任何社会任务。 如果有人用错误的方式惹恼了我，我就不必和他们打交道。 我可以和我真正喜欢的朋友一起生活，我们可以通过社交选择而不是被迫的环境来交往。</p>
<p>你每天和多少你真正喜欢的人交往？ 我拥有的大多数社交关系都是和我真正喜欢的人。 如果我不喜欢他们，我就不会和他们交流。</p>
<p>自由职业者可能会花很多时间独处，特别是如果你有一个互联网业务。 如果你去参加一个网络营销会议，你可能会发现80% 到90% 的人都是内向的。 许多你认为是完全外向的人，看到他们兴奋的在直播视频，当你亲眼见到他们的时候，他们实际上是安静和害羞的。 当他们自己制作视频的时候，他们可以看起来很外向，但是面对面的交流是非常不同的。</p>
<p>许多内向的人对此完全没有意见，他们更愿意把自己包裹起来，在数字设备后面进行大部分的交流。 如果那是你的爱好，你可能真的喜欢没有工作的生活。 <strong>今天你几乎可以用这种方式运行你的整个人生。 或者你可能更喜欢一份最大限度减少人际交往的工作。</strong></p>
<p>我不想走这条路，因为我觉得这条路对我来说不是以成长为导向的，所以在我开始写博客的同一年，我也加入了国际演讲会，以提高我的公共演讲技巧。 我这样做的部分原因是为了为我的生活和事业创造一个更好的社会平衡。 我很高兴我这样做了，因为它给了我自由，让我可以作为一个内向或外向的人生活，而不用被迫选择立场。 有时我喜欢离开电脑，通过演讲、研讨会、聚会和旅行与人们面对面交流。 其他时候，我觉得有点不知所措的社交和渴望几个星期独自工作或享受生活与我的女朋友。</p>
<p>可以说，自从我开始写博客以来，管理我的社交生活一直是我最大的挑战。 需要一些真正有意识的思考才能达到正确的平衡，而正确的决定并不总是清晰的。 我经历了多轮社会扩张和退缩，最终获得了一种不是压倒性的社会富足感。 建立清醒成长俱乐部是扩展阶段之一。</p>
<p>我倾向于很容易结交新朋友，所以我很高兴自己不必满足于社交障碍的生活。 我喜欢有很多刺激的、以成长为导向的朋友。 我也喜欢有创造适合自己的社交生活的自由。 想到如果我的工作妨碍了我深思熟虑地管理这部分生活的能力，我会变得多么压抑，我不寒而栗。</p>
<p>我认为我在社交道路上最享受的是遇到其他以成长为导向的人，他们喜欢在世界其他地方动荡的时候来回摇摆。 这些人给我的生活增添了极大的丰富性。 他们给了我希望，有朝一日，我们可能会一起引诱世界其他国家停止如此大幅度的区域化。 难道我们的固化生活还不够糟糕吗？</p>
<h1 id="探-索">🤠 探 索</h1>
<p>探索个人成长是我的激情所在，如果我被一份限制了我能力的工作所束缚，就很难充分发掘这份激情。</p>
<p>如果我有一份朝九晚五的工作，我是否可以连续30天做多阶段睡眠、禁食或者去迪斯尼乐园的实验？ 这值得怀疑。 也许我可以在假期做一些短期的实验，但是我不能让这种探索成为我正常生活方式的一部分。 我也不想浪费我的假期去处理没有睡眠，没有食物，没完没了的迪斯尼音乐。谁愿意戴上社交面具来取悦自己的老板呢？ 做我自己更容易。 我不想每次去上班都要假装成别人。</p>
<p>我认为许多人躲在工作背后，作为一个方便的借口，不去探索他们的欲望。 探索包括冒险和面对恐惧。 人们很容易安定下来，告诉自己没有时间、自由或金钱来确定、阐明和追求更有趣的目标。 仅仅是弄清楚自己的欲望就需要花费大量的工作，更不用说腾出时间来真正探索它们了。</p>
<p>我也可以专注于自己的事业，但很难假装自己不能控制自己的探索。 如果我没有探索我真正想要的东西，我就必须面对并克服内心的阻力。 我不能把一个借口具体化，然后指望自己相信它。</p>
<p>结果就是，我比有工作的时候探索得更多。 我不需要在工作空档期安排自己的探索时间。 我也可以把它们编织到我的工作中，而且工作、生活和娱乐之间不需要有明显的分离。</p>
<h1 id="位-置-自-由">😲 位 置 自 由</h1>
<p><strong>一份工作可以把你固定在一个地方，但是如果没有工作，你可以去任何你想去的地方，任何你想去的地方。 如果你愿意，你甚至可以住在马路上。</strong></p>
<p>我曾经幻想过过完全的游牧生活，但是我喜欢回到一个稳定的家乡，有时候我会因为长时间的旅行而感到筋疲力尽。 我在家里的办公室工作效率更高，有些实验在家里做起来也容易得多。 对我来说，最有效的方法就是在家里的时间和在路上的时间之间摇摆。 当我觉得是时候离开我的办公桌的时候，我已经非常擅长自发的旅行了。</p>
<p>我喜欢旅行不仅仅是一个梦想，而是随时随地都可以实现的梦想。 前往其他城市和国家极大地丰富了我的生活，我看到这成为我未来几十年生活方式的一部分。</p>
<h1 id="技-能-广-度-和-深-度">😬 技 能、广 度 和 深 度</h1>
<p>作为一名员工，我也许可以凭借一些有限的技能勉强度日，但要想在没有工作的情况下生存并茁壮成长，我必须发展出各种各样的技能。</p>
<p>拥有广泛的技能并不意味着肤浅。 你实际上可以从互补的技能中获得更多的深度，这些互补的技能可以增强彼此。</p>
<p>在我失业的道路上，我在编程、写作、商业、公共演讲、谈判、指导、活动管理、销售、市场营销、创造收入流、社区建设、网站开发、产品开发、人际关系等方面都有所提高。 我在计算机科学和数学方面的大学学位对于我从那时起所学的一切来说就像婴儿学步一样。 我经常感觉自己必须继续每年或每两年获得相当于一个新的大学学位，才能跟上快速变化的步伐，尤其是在网上做生意的时候。 我总觉得自己在一个或另一个重要领域落后了，这促使我迅速吸收和应用新想法。</p>
<p>对我来说，有自由引导自己的教育道路是很重要的。 每个星期我都在吞噬着信息，我学得越多，我就越容易接触到自己理解的边缘。</p>
<p>最近我一直在享受其他人的辅导课程。 我目前属于两个付费社区，而且可能会加入更多。 学习这种方式在经济上更昂贵，但在时间上更便宜，因为我可以从专家和教练那里学到比仅仅读书更快的东西。 我喜欢阅读，通常每周大约读两本书，但大多数时候，这并不是推动我前进的动力。</p>
<p>我认为，如果我是一名雇员，我会落入这样一个陷阱: 过于依赖我现有的技能，而不是每个月推动扩展和深化我的技能。 我认为我会花太多时间一遍又一遍地用同样的方式做我的工作，而不是质疑我如何工作，并不断地寻求为明天的世界建立相关的技能。</p>
<p>拥有这么多经济上有用的技能使我很难失败，因为我总是可以转向一个或另一个技能集。 我可以写文章或书。 我可以做公开演讲。 我会做网络营销。 我知道如何建立网站、网络流量和在线社区。 我可以写软件，插件，或者视频游戏。 我可以做基本的音频和视频编辑。 我可以做咨询或指导。 诸如此类。 我不必太担心我的领域的转变会导致我的技能过时。 事实上，我喜欢转变发生的时候，因为它允许我在大多数人还不知道发生了什么之前抓住新的机会... 就像我在2004年开始写博客的时候，也就是 WordPress 出现的那一年。</p>
<p>发展各种技能也使我成为一个更快的学习者，所以我能够快速建立新技能的能力，并开始有效地使用它们。 <strong>我学习的技能越多，我似乎就能越快地掌握新的技能。</strong></p>
<p>这种持续不断的学习压力会让一些人筋疲力尽。 我见过朋友们因为担心自己落后于别人而经历压倒性的时期。 有时候我也会屈服于这种感觉，但总的来说，我喜欢这种刺激，这种刺激促使自己去学习、学习、学习。 我喜欢回顾过去的一个月或一个季度，总结我所学到的东西。</p>
<h1 id="感-激">😱 感 激</h1>
<p>当我回顾25年没有工作的生活时，我感受到的主要情绪是感激、欣赏和解脱。 这并不是一条平坦的道路，一路上我也经历了一些挫折，但我真的很高兴我决定追求一种失业的生活方式。 这个决定促使我在很多方面成长，如果我走员工路线，我怀疑自己是否有过这种经历。</p>
<p>当我想到未来25年这条道路时，我感到高兴、兴奋和乐观。 即使我只是保持现在的生活方式，我想我会在这条道路上感到很满足。 但我确信未来会有很多变化，我期待着驾驭它们，即使它们时不时地让我失去平衡。</p>
<h1 id="题-外-话">🤔 题 外 话</h1>
<p>这是一篇优质的<strong>外文翻译</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linker 第 6 期  -  开启远程办公之旅]]></title>
        <id>https://aturx.github.io/post/linker-di-6-qi-kai-qi-yuan-cheng-ban-gong-zhi-lu</id>
        <link href="https://aturx.github.io/post/linker-di-6-qi-kai-qi-yuan-cheng-ban-gong-zhi-lu">
        </link>
        <updated>2020-02-09T05:31:56.000Z</updated>
        <content type="html"><![CDATA[<p>开启自己的远程办公之旅。<br>
下面几个网站是我经过探索，发现的新崛起的几个自由职业/远程办公网站。</p>
<p>我认为，区块链的进步之处，在于我们将信任一个机构，变为了信任一种制度，并对制度的维护者给与激励，这很公平合理。</p>
<h2 id="国内网站">国内网站</h2>
<ol>
<li><a href="https://jarodise.com/">数字游民</a></li>
</ol>
<p>国内的数字游民网站，包含很多不错的资源。对远程办公、资源职业、数字游民很有帮助。</p>
<ol start="2">
<li><a href="http://www.freemancn.com/index.php?do=tasklist">自由人协作</a></li>
</ol>
<p>一个半兼职的任务接单网站，优点是内容比较靠谱，技术要求不高。</p>
<ol start="3">
<li><a href="https://eleduck.com/">电鸭社区</a></li>
</ol>
<p>国内比较活跃的自由职业者社区，有不错的社区文化，并且在不断的成长过程中。</p>
<ol start="4">
<li><a href="https://yuancheng.work/">远程.work</a></li>
</ol>
<p>提供了不错的远程岗位，并且可以提供自己的远程需求。</p>
<h2 id="国外网站">国外网站</h2>
<ol>
<li><a href="https://gitcoin.co/">Gitcoin</a></li>
</ol>
<p>通过GitHub登录，并完成开发任务，修复bug，完成开发需求，软件测试，代码review等都可以获取代币激励。我认为GitHub和数字货币结合有着天然的优势。</p>
<ol start="2">
<li><a href="https://nomadlist.com/">全球数字游民</a></li>
</ol>
<p>数字游民，有电脑，有网。世界哪里都是家。这里有更详细的信息，包括每个地方，舒适度，环境是否适宜办公，网络状态是否良好。或许还能相个亲。</p>
<ol start="3">
<li><a href="https://remoteok.io/remote-dev-jobs">远程OK</a></li>
</ol>
<p>一个提供远程办公的网站，有比较多远程办公需求提供。</p>
<h2 id="代币经济下的自由职业">代币经济下的自由职业</h2>
<ol>
<li>
<p>*<a href="https://freelanceforcoins.com">数字货币自由职业平台-FreelanceForCoins</a></p>
</li>
<li>
<p>*<a href="https://ethlance.com">以太坊自由职业平台-Ethlance</a></p>
</li>
<li>
<p>*<a href="https://www.cryptogrind.com/">比特币自由职业平台-CryptoGrind</a></p>
</li>
<li>
<p>*<a href="https://blocklancer.net/">区块链自由职业平台-Blocklancer</a></p>
</li>
<li>
<p>*<a href="https://www.cryptotask.org/">cryptotask</a></p>
</li>
</ol>
<p>以上五个网站，均通过数字货币进行结算。我只是抱着探索的态度，去尝试了一些。我个人认为，远程创作者 + 区块链代币激励 将会成为很好的一种模式促进自由职业与远程办公的发展。</p>
<h2 id="传统自由职业平台">传统自由职业平台</h2>
<ol>
<li>
<p><a href="https://www.truelancer.com">Truelancer</a></p>
</li>
<li>
<p><a href="https://www.peopleperhour.com/">Peopleperhour</a></p>
</li>
<li>
<p><a href="https://www.guru.com/">guru</a></p>
</li>
<li>
<p><a href="https://www.xplace.com/">xplace</a></p>
</li>
</ol>
]]></content>
    </entry>
</feed>